"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
const server_1 = __importDefault(require("../server/server"));
require('./../db/mongoose.connection');
const supertest_1 = __importDefault(require("supertest"));
const chai_1 = require("chai");
const ENDPOINT = '/api/pedidos/';
let ID_NOVO = '';
const novo = {
    paciente: '433443443',
    medico: '4243424',
    validade: '2021-01-22',
    exames: [
        'Vista',
        'Sangue',
        'Resistência'
    ]
};
describe('Seção: Pedidos', function () {
    let request;
    before(function () {
        request = supertest_1.default.agent(server_1.default.getApp());
    });
    after(function (done) {
        server_1.default.pararServidor();
        done();
    });
    it('deveria permitir adicionar novo pedido', async function () {
        const res = await request.post(ENDPOINT).send(novo);
        (0, chai_1.expect)(res.status).to.equal(201);
        (0, chai_1.expect)(res.body).not.to.be.empty;
        (0, chai_1.expect)(res.body).to.be.an('object');
        ID_NOVO = res.body.data.pedido.id;
        (0, chai_1.expect)(ID_NOVO).not.equal('');
    });
    it('deveria permitir obter um GET em /api/pedidos/ e ter um ou mais registros', async function () {
        const res = await request.get(ENDPOINT);
        (0, chai_1.expect)(res.status).to.equal(200);
        (0, chai_1.expect)(res.body).not.to.be.empty;
        const data = res.body;
        (0, chai_1.expect)(data.results).to.be.greaterThan(0);
    });
    it('deveria retornar o registro do paciente recém-criado', async function () {
        const res = await request.get(`${ENDPOINT}${ID_NOVO}`);
        (0, chai_1.expect)(res.status).to.equal(200);
        (0, chai_1.expect)(res.body).not.to.be.empty;
        (0, chai_1.expect)(res.body).to.be.an('object');
        const data = res.body.data;
        (0, chai_1.expect)(data.paciente).to.be.equal(novo.paciente);
    });
    it('deveria retornar um erro caso façamos uma busca por um ID não cadastrado', async function () {
        const res = await request.get(`${ENDPOINT}2398`);
        (0, chai_1.expect)(res.status).to.equal(404);
    });
    it('deveria permitir alterar alguns dados do pedido recém-criado', async function () {
        const res = await request.patch(`${ENDPOINT}${ID_NOVO}`).send({
            validade: '2022-12-25'
        });
        (0, chai_1.expect)(res.status).to.equal(200);
        (0, chai_1.expect)(res.body).not.to.be.empty;
        const data = res.body.data;
        (0, chai_1.expect)(data.validade).not.be.equal(novo.validade);
    });
    it('deveria permitir apagar pedido recém-criado', async function () {
        const res = await request.delete(`${ENDPOINT}${ID_NOVO}`);
        (0, chai_1.expect)(res.status).to.equal(204);
    });
});
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoicGVkaWRvcy50ZXN0LmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vdGVzdC9wZWRpZG9zLnRlc3QudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7Ozs7QUFBQSw4REFBcUM7QUFDckMsT0FBTyxDQUFDLDZCQUE2QixDQUFDLENBQUE7QUFDdEMsMERBQWlDO0FBQ2pDLCtCQUE2QjtBQUU3QixNQUFNLFFBQVEsR0FBRyxlQUFlLENBQUE7QUFFaEMsSUFBSSxPQUFPLEdBQUcsRUFBRSxDQUFBO0FBQ2hCLE1BQU0sSUFBSSxHQUFHO0lBQ1gsUUFBUSxFQUFFLFdBQVc7SUFDckIsTUFBTSxFQUFFLFNBQVM7SUFDakIsUUFBUSxFQUFFLFlBQVk7SUFDdEIsTUFBTSxFQUFFO1FBQ04sT0FBTztRQUNQLFFBQVE7UUFDUixhQUFhO0tBQ2Q7Q0FDRixDQUFBO0FBRUQsUUFBUSxDQUFDLGdCQUFnQixFQUFFO0lBQ3pCLElBQUksT0FBaUMsQ0FBQTtJQUNyQyxNQUFNLENBQUM7UUFDTCxPQUFPLEdBQUcsbUJBQVMsQ0FBQyxLQUFLLENBQUMsZ0JBQU0sQ0FBQyxNQUFNLEVBQUUsQ0FBQyxDQUFBO0lBQzVDLENBQUMsQ0FBQyxDQUFBO0lBRUYsS0FBSyxDQUFDLFVBQVUsSUFBSTtRQUNsQixnQkFBTSxDQUFDLGFBQWEsRUFBRSxDQUFBO1FBQ3RCLElBQUksRUFBRSxDQUFBO0lBQ1IsQ0FBQyxDQUFDLENBQUE7SUFHRixFQUFFLENBQUMsd0NBQXdDLEVBQUUsS0FBSztRQUNoRCxNQUFNLEdBQUcsR0FBRyxNQUFNLE9BQU8sQ0FBQyxJQUFJLENBQUMsUUFBUSxDQUFDLENBQUMsSUFBSSxDQUFDLElBQUksQ0FBQyxDQUFBO1FBQ25ELElBQUEsYUFBTSxFQUFDLEdBQUcsQ0FBQyxNQUFNLENBQUMsQ0FBQyxFQUFFLENBQUMsS0FBSyxDQUFDLEdBQUcsQ0FBQyxDQUFBO1FBQ2hDLElBQUEsYUFBTSxFQUFDLEdBQUcsQ0FBQyxJQUFJLENBQUMsQ0FBQyxHQUFH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